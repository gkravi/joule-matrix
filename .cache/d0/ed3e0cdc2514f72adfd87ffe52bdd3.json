{"id":"test.js","dependencies":[{"name":"C:\\MyDrive\\Workspace\\pptr\\visual-testing\\package.json","includedInParent":true,"mtime":1598705424810},{"name":"axios","loc":{"line":2,"column":18},"parent":"C:\\MyDrive\\Workspace\\pptr\\visual-testing\\public\\js\\test.js","resolved":"C:\\MyDrive\\Workspace\\pptr\\visual-testing\\node_modules\\axios\\index.js"},{"name":"./alerts","loc":{"line":3,"column":26},"parent":"C:\\MyDrive\\Workspace\\pptr\\visual-testing\\public\\js\\test.js","resolved":"C:\\MyDrive\\Workspace\\pptr\\visual-testing\\public\\js\\alerts.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.triggerTest = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _alerts = require(\"./alerts\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// type is either 'password' or 'data'\nvar triggerTest = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(data, testSlug) {\n    var url, res;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            url = \"/api/v1/tests/\".concat(testSlug, \"/trigger\");\n            _context.next = 4;\n            return (0, _axios.default)({\n              method: 'POST',\n              url: url,\n              data: data\n            });\n\n          case 4:\n            res = _context.sent;\n\n            if (res.data.status === 'success') {\n              (0, _alerts.showAlert)('success', 'Test Queued successfully!');\n              window.setTimeout(function () {\n                location.assign(\"/test/\".concat(testSlug));\n              }, 1500);\n            }\n\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            (0, _alerts.showAlert)('error', _context.t0.response.data.message);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function triggerTest(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.triggerTest = triggerTest;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"test.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"test.js","original":{"line":3,"column":0}},{"generated":{"line":18,"column":0},"source":"test.js","original":{"line":5,"column":0}},{"generated":{"line":19,"column":0},"source":"test.js","original":{"line":6,"column":7}},{"name":"triggerTest","generated":{"line":19,"column":4},"source":"test.js","original":{"line":6,"column":13}},{"generated":{"line":19,"column":15},"source":"test.js","original":{"line":6,"column":24}},{"generated":{"line":20,"column":0},"source":"test.js","original":{"line":6,"column":24}},{"generated":{"line":20,"column":69},"source":"test.js","original":{"line":6,"column":27}},{"name":"data","generated":{"line":20,"column":86},"source":"test.js","original":{"line":6,"column":34}},{"generated":{"line":20,"column":90},"source":"test.js","original":{"line":6,"column":27}},{"name":"testSlug","generated":{"line":20,"column":92},"source":"test.js","original":{"line":6,"column":40}},{"generated":{"line":20,"column":100},"source":"test.js","original":{"line":6,"column":27}},{"generated":{"line":21,"column":0},"source":"test.js","original":{"line":6,"column":27}},{"generated":{"line":22,"column":0},"source":"test.js","original":{"line":6,"column":27}},{"generated":{"line":23,"column":0},"source":"test.js","original":{"line":6,"column":27}},{"generated":{"line":24,"column":0},"source":"test.js","original":{"line":6,"column":27}},{"generated":{"line":25,"column":0},"source":"test.js","original":{"line":6,"column":27}},{"generated":{"line":26,"column":0},"source":"test.js","original":{"line":6,"column":27}},{"name":"url","generated":{"line":27,"column":0},"source":"test.js","original":{"line":8,"column":8}},{"name":"url","generated":{"line":27,"column":12},"source":"test.js","original":{"line":8,"column":8}},{"generated":{"line":27,"column":15},"source":"test.js","original":{"line":6,"column":27}},{"name":"testSlug","generated":{"line":27,"column":42},"source":"test.js","original":{"line":8,"column":31}},{"generated":{"line":27,"column":50},"source":"test.js","original":{"line":6,"column":27}},{"generated":{"line":28,"column":0},"source":"test.js","original":{"line":6,"column":27}},{"generated":{"line":29,"column":0},"source":"test.js","original":{"line":6,"column":27}},{"generated":{"line":29,"column":19},"source":"test.js","original":{"line":9,"column":20}},{"generated":{"line":29,"column":39},"source":"test.js","original":{"line":9,"column":26}},{"name":"method","generated":{"line":30,"column":0},"source":"test.js","original":{"line":10,"column":3}},{"name":"method","generated":{"line":30,"column":14},"source":"test.js","original":{"line":10,"column":3}},{"generated":{"line":30,"column":20},"source":"test.js","original":{"line":10,"column":9}},{"generated":{"line":30,"column":22},"source":"test.js","original":{"line":10,"column":11}},{"generated":{"line":30,"column":28},"source":"test.js","original":{"line":9,"column":26}},{"name":"url","generated":{"line":31,"column":0},"source":"test.js","original":{"line":11,"column":3}},{"name":"url","generated":{"line":31,"column":14},"source":"test.js","original":{"line":11,"column":3}},{"generated":{"line":31,"column":17},"source":"test.js","original":{"line":11,"column":6}},{"name":"url","generated":{"line":31,"column":19},"source":"test.js","original":{"line":11,"column":3}},{"generated":{"line":31,"column":22},"source":"test.js","original":{"line":9,"column":26}},{"name":"data","generated":{"line":32,"column":0},"source":"test.js","original":{"line":12,"column":3}},{"name":"data","generated":{"line":32,"column":14},"source":"test.js","original":{"line":12,"column":3}},{"generated":{"line":32,"column":18},"source":"test.js","original":{"line":12,"column":7}},{"name":"data","generated":{"line":32,"column":20},"source":"test.js","original":{"line":12,"column":3}},{"generated":{"line":33,"column":0},"source":"test.js","original":{"line":9,"column":26}},{"generated":{"line":33,"column":13},"source":"test.js","original":{"line":9,"column":20}},{"generated":{"line":33,"column":14},"source":"test.js","original":{"line":6,"column":27}},{"generated":{"line":35,"column":0},"source":"test.js","original":{"line":6,"column":27}},{"name":"res","generated":{"line":36,"column":0},"source":"test.js","original":{"line":9,"column":8}},{"name":"res","generated":{"line":36,"column":12},"source":"test.js","original":{"line":9,"column":8}},{"generated":{"line":36,"column":15},"source":"test.js","original":{"line":6,"column":27}},{"generated":{"line":38,"column":0},"source":"test.js","original":{"line":15,"column":2}},{"name":"res","generated":{"line":38,"column":16},"source":"test.js","original":{"line":15,"column":6}},{"generated":{"line":38,"column":19},"source":"test.js","original":{"line":15,"column":9}},{"name":"data","generated":{"line":38,"column":20},"source":"test.js","original":{"line":15,"column":10}},{"generated":{"line":38,"column":24},"source":"test.js","original":{"line":15,"column":6}},{"name":"status","generated":{"line":38,"column":25},"source":"test.js","original":{"line":15,"column":15}},{"generated":{"line":38,"column":31},"source":"test.js","original":{"line":15,"column":6}},{"generated":{"line":38,"column":36},"source":"test.js","original":{"line":15,"column":26}},{"generated":{"line":38,"column":45},"source":"test.js","original":{"line":15,"column":2}},{"generated":{"line":38,"column":47},"source":"test.js","original":{"line":15,"column":37}},{"generated":{"line":39,"column":0},"source":"test.js","original":{"line":16,"column":3}},{"generated":{"line":39,"column":37},"source":"test.js","original":{"line":16,"column":13}},{"generated":{"line":39,"column":46},"source":"test.js","original":{"line":16,"column":3}},{"generated":{"line":39,"column":48},"source":"test.js","original":{"line":16,"column":24}},{"generated":{"line":39,"column":75},"source":"test.js","original":{"line":16,"column":3}},{"name":"window","generated":{"line":40,"column":0},"source":"test.js","original":{"line":17,"column":3}},{"name":"window","generated":{"line":40,"column":14},"source":"test.js","original":{"line":17,"column":3}},{"generated":{"line":40,"column":20},"source":"test.js","original":{"line":17,"column":9}},{"name":"setTimeout","generated":{"line":40,"column":21},"source":"test.js","original":{"line":17,"column":10}},{"generated":{"line":40,"column":31},"source":"test.js","original":{"line":17,"column":3}},{"generated":{"line":40,"column":32},"source":"test.js","original":{"line":17,"column":21}},{"generated":{"line":40,"column":44},"source":"test.js","original":{"line":17,"column":27}},{"name":"location","generated":{"line":41,"column":0},"source":"test.js","original":{"line":18,"column":4}},{"name":"location","generated":{"line":41,"column":16},"source":"test.js","original":{"line":18,"column":4}},{"generated":{"line":41,"column":24},"source":"test.js","original":{"line":18,"column":12}},{"name":"assign","generated":{"line":41,"column":25},"source":"test.js","original":{"line":18,"column":13}},{"generated":{"line":41,"column":31},"source":"test.js","original":{"line":18,"column":4}},{"name":"testSlug","generated":{"line":41,"column":48},"source":"test.js","original":{"line":18,"column":29}},{"generated":{"line":41,"column":56},"source":"test.js","original":{"line":18,"column":4}},{"generated":{"line":42,"column":0},"source":"test.js","original":{"line":19,"column":4}},{"generated":{"line":42,"column":15},"source":"test.js","original":{"line":17,"column":3}},{"generated":{"line":42,"column":17},"source":"test.js","original":{"line":19,"column":6}},{"generated":{"line":42,"column":21},"source":"test.js","original":{"line":17,"column":3}},{"generated":{"line":43,"column":0},"source":"test.js","original":{"line":20,"column":3}},{"generated":{"line":45,"column":0},"source":"test.js","original":{"line":6,"column":27}},{"generated":{"line":46,"column":0},"source":"test.js","original":{"line":6,"column":27}},{"generated":{"line":48,"column":0},"source":"test.js","original":{"line":6,"column":27}},{"generated":{"line":49,"column":0},"source":"test.js","original":{"line":6,"column":27}},{"generated":{"line":50,"column":0},"source":"test.js","original":{"line":6,"column":27}},{"generated":{"line":51,"column":0},"source":"test.js","original":{"line":22,"column":2}},{"generated":{"line":51,"column":35},"source":"test.js","original":{"line":22,"column":12}},{"generated":{"line":51,"column":42},"source":"test.js","original":{"line":22,"column":2}},{"generated":{"line":51,"column":44},"source":"test.js","original":{"line":22,"column":21}},{"name":"response","generated":{"line":51,"column":56},"source":"test.js","original":{"line":22,"column":25}},{"generated":{"line":51,"column":64},"source":"test.js","original":{"line":22,"column":21}},{"name":"data","generated":{"line":51,"column":65},"source":"test.js","original":{"line":22,"column":34}},{"generated":{"line":51,"column":69},"source":"test.js","original":{"line":22,"column":21}},{"name":"message","generated":{"line":51,"column":70},"source":"test.js","original":{"line":22,"column":39}},{"generated":{"line":51,"column":77},"source":"test.js","original":{"line":22,"column":2}},{"generated":{"line":53,"column":0},"source":"test.js","original":{"line":6,"column":27}},{"generated":{"line":54,"column":0},"source":"test.js","original":{"line":6,"column":27}},{"generated":{"line":55,"column":0},"source":"test.js","original":{"line":6,"column":27}},{"generated":{"line":56,"column":0},"source":"test.js","original":{"line":6,"column":27}},{"generated":{"line":57,"column":0},"source":"test.js","original":{"line":6,"column":27}},{"generated":{"line":58,"column":0},"source":"test.js","original":{"line":6,"column":27}},{"generated":{"line":59,"column":0},"source":"test.js","original":{"line":6,"column":27}},{"generated":{"line":59,"column":3},"source":"test.js","original":{"line":6,"column":24}},{"generated":{"line":61,"column":0},"source":"test.js","original":{"line":6,"column":24}},{"name":"triggerTest","generated":{"line":61,"column":18},"source":"test.js","original":{"line":6,"column":13}},{"generated":{"line":61,"column":29},"source":"test.js","original":{"line":6,"column":24}},{"generated":{"line":62,"column":0},"source":"test.js","original":{"line":6,"column":24}},{"generated":{"line":63,"column":0},"source":"test.js","original":{"line":6,"column":24}},{"generated":{"line":64,"column":0},"source":"test.js","original":{"line":6,"column":24}},{"generated":{"line":64,"column":3},"source":"test.js","original":{"line":6,"column":7}}],"sources":{"test.js":"/* eslint-disable */\r\nimport axios from 'axios';\r\nimport { showAlert } from './alerts';\r\n\r\n// type is either 'password' or 'data'\r\nexport const triggerTest = async (data, testSlug) => {\r\n\ttry {\r\n\t\tconst url = `/api/v1/tests/${testSlug}/trigger`;\r\n\t\tconst res = await axios({\r\n\t\t\tmethod: 'POST',\r\n\t\t\turl,\r\n\t\t\tdata,\r\n\t\t});\r\n\r\n\t\tif (res.data.status === 'success') {\r\n\t\t\tshowAlert('success', 'Test Queued successfully!');\r\n\t\t\twindow.setTimeout(() => {\r\n\t\t\t\tlocation.assign(`/test/${testSlug}`);\r\n\t\t\t}, 1500);\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tshowAlert('error', err.response.data.message);\r\n\t}\r\n};\r\n"},"lineCount":null}},"error":null,"hash":"bfa85c67e876337b8c77984023e7931d","cacheData":{"env":{}}}